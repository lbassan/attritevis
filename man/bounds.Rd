% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attritevis_fns.R
\name{bounds}
\alias{bounds}
\title{Calculate treatment effect bounds}
\usage{
bounds(data, treatment, DV, type = "Manski")
}
\arguments{
\item{data}{A data.frame from which \code{treatment} and \code{DV} are taken.}

\item{treatment}{A character string that corresponds to the name of the treatment variable. Note that values of said variable must be specified as "treatment" and "control".}

\item{DV}{A character string that corresponds to the name of the outcome variable}

\item{type}{A character string that corresponds to the type of bounds required ("Manski" or "Lee"). Default is \code{type = "Manski"}.}
}
\value{
A logistic regression, regressing attrition (remain in survey=0, attrited=1) over specified treatment.
}
\description{
Yields extreme (Manski) bounds or trimming (Lee) bounds, using the \code{attrition} package by Alex Coppock.
}
\examples{
# Generate simulated data, where Q1 to Q4 are pre-treatment questions,
# Q5 is the treatment assignment,
# and subsequent questions are post-treatment questions
n <- 1000
test_sim <- data.frame (
  Q1 = "agree", # consent
  Q2 = sample(c(18:90), n, rep = TRUE), # age
  Q3 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), # sex
  Q4 = sample(c(0, 1), n, rep = TRUE),
  Q5 = sample(c("treatment", "control"), n, rep = TRUE), # treatment
  Q6 = sample(1:7, n, rep = TRUE), # outcome variable
  Q7 = sample(1:7, n, rep = TRUE),
  Q8 = sample(1:7, n, rep = TRUE),
  Q9 = sample(1:7, n, rep = TRUE),
  Q10 = sample(1:7, n, rep = TRUE)) # other general pre-treatment questions

# Generate general attrition throughput
invisible(sapply(sample(1:nrow(test_sim), 500, 0.8 * nrow(test_sim)), function(x) {
  a <- sample(1:10, 1)
  test_sim[x, a:ncol(test_sim)] <<- NA
}))

# Generate attrition that's correlated with the treatment
# specifically, we want to demonstrate attrition that happens at a certain time
# to do so, we add a running var that will demonstrate time
test_sim$no <- rownames(test_sim)
test_sim$Q6 <- ifelse(test_sim$Q5 == "control" & (test_sim$no > 200 & test_sim$no <
                                                      300), NA, test_sim$Q6)
test_sim$Q7 <- ifelse(is.na(test_sim$Q6), NA, test_sim$Q7)
test_sim$Q8 <- ifelse(is.na(test_sim$Q6), NA, test_sim$Q8)
test_sim$Q9 <- ifelse(is.na(test_sim$Q6), NA, test_sim$Q9)
test_sim$Q10 <- ifelse(is.na(test_sim$Q6), NA, test_sim$Q10)
test_sim$no <- NULL

# Manski bounds (default option)
bounds(data = test_sim,
       treatment = "Q5",
       DV = "Q8")

# Lee sharp bounds
bounds(data = test_sim,
       treatment = "Q5",
       DV = "Q7",
       type = "Lee")

}
